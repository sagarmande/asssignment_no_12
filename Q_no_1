class Node:
    def __init__(self, data):
        self.data = data
        self.next = None

def delete_middle(head):
    if head is None or head.next is None:
        return None

    slow = head
    fast = head
    prev = None

    while fast is not None and fast.next is not None:
        fast = fast.next.next
        prev = slow
        slow = slow.next

    prev.next = slow.next
    return head


# Example 1:
# Input: 1->2->3->4->5
# Output: 1 2 4 5

head = Node(1)
head.next = Node(2)
head.next.next = Node(3)
head.next.next.next = Node(4)
head.next.next.next.next = Node(5)

head = delete_middle(head)

while head is not None:
    print(head.data, end=' ')
    head = head.next

# Example 2:
# Input: 1->2->3->4->5->6
# Output: 1 2 3 5 6

head = Node(1)
head.next = Node(2)
head.next.next = Node(3)
head.next.next.next = Node(4)
head.next.next.next.next = Node(5)
head.next.next.next.next.next = Node(6)

head = delete_middle(head)

while head is not None:
    print(head.data, end=' ')
    head = head.next
